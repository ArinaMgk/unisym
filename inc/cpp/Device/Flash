// ASCII C/C++ TAB4 CRLF
// Docutitle: (Device) Flash
// Codifiers: @dosconio: ~ 20240718
// Attribute: Arn-Covenant Any-Architect Env-Freestanding Non-Dependence
// Copyright: UNISYM, under Apache License 2.0
/*
	Copyright 2023 ArinaMgk

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0
	http://unisym.org/license.html

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

#ifndef _INC_DEVICE_Flash
#define _INC_DEVICE_Flash

#include "../unisym"
#include "../reference"

#if defined(_MCU_STM32F1x) || defined(_MCU_STM32F4x)

#endif// _MCU_STM32F1x || _MCU_STM32F4x

#ifdef _MCU_STM32F1x



#elif defined(_MCU_STM32F4x)

#define _Flash_ADDR 0x40023C00 //~ 0x40023CFF
#define _Flash_ACR_POSI_PRFTEN 8

namespace uni {

	namespace FlashReg {
		typedef enum {
			ACR = 0, KEYR, OPTKEYR, SR,
			CR, OPTCR
		} FlashReg;
	}
	
	class Flash_t {
	public:
		Reference operator[](FlashReg::FlashReg idx) {
			return Reference(_Flash_ADDR + (_IMM(idx) << 2));
		}

	};
	extern Flash_t Flash;// yo RCC!
}

#endif
#endif


