// UTF-8 CPP-ISO11 TAB4 CRLF
// Docutitle: (Device) Floating Point Unit
// Codifiers: @dosconio: 20241209 ~ <Last-check> 
// Attribute: Arn-Covenant Any-Architect Env-Freestanding Non-Dependence
// Copyright: UNISYM, under Apache License 2.0
/*
	Copyright 2023 ArinaMgk

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0
	http://unisym.org/license.html

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

#ifndef _INCPP_Device_FPU
#define _INCPP_Device_FPU
#include "../../c/stdinc.h"
namespace uni {
#ifdef _MPU_STM32MP13

	class FPU_t {
	public:
		// AKA __FPU_Enable
		// (?) Critical section, called from undef handler, so systick is disabled
		void enAble(bool ena = true) const;
	};
	extern FPU_t FPU;


#endif
}


#endif // _INCPP_Device_FPU
