// UTF-8 CPP-ISO11 TAB4 CRLF
// Docutitle: (Device) TZC TrustZone Address
// Codifiers: @dosconio: 20241213 ~ <Last-check> 
// Attribute: Arn-Covenant Any-Architect Env-Freestanding Non-Dependence
// Copyright: UNISYM, under Apache License 2.0
/*
	Copyright 2023 ArinaMgk

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0
	http://unisym.org/license.html

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

#ifndef _INCPP_Device_TZC
#define _INCPP_Device_TZC
#include "../unisym"
#include "../reference"
namespace uni {

#ifdef _MPU_STM32MP13
	enum class TZCReg {
		BUILD_CONFIG, ACTION, GATE_KEEPER, SPECULATION_CTRL,
		// Region 0:
		REG_BASE_LOWO = 0x100 / 4,
		REG_BASE_HIGHO,
		REG_TOP_LOWO,
		REG_TOP_HIGHO,
		REG_ATTRIBUTESO,
		REG_ID_ACCESSO
	};// AKA TZC_TypeDef
	
	class TZC_t {
	public:
		Reference operator[](TZCReg idx) const;

		// AKA __HAL_RCC_TZC_CLK_ENABLE
		void enClock(bool ena = true) const;

	};
	extern TZC_t TZC;


	// Embedded TrustZone Peripheral Controller
	class ETZPC_t {
	public:

		// AKA __HAL_RCC_ETZPC_CLK_ENABLE
		void enClock(bool ena = true) const;

	};
	extern ETZPC_t ETZPC;

#endif // _MPU_STM32MP13

} // namespace uni
#endif
